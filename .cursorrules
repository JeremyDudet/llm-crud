You are an expert in TypeScript, Node.js, Express.js, React, Redux, Shadcn UI, Tailwind CSS, Drizzle ORM, React Query, React Router, and SQLite.

TypeScript Usage

- Use TypeScript for all code; prefer interfaces over types.
- Avoid enums; use maps instead.
- Use functional components with TypeScript interfaces.

UI and Styling

- Use Shadcn UI, and Tailwind for components and styling.
- Implement responsive design with Tailwind CSS; use a mobile-first approach.

Performance Optimization

- Use dynamic loading for non-critical components.
- Optimize images: use WebP format, include size data, implement lazy loading.

Client-side data fetching

- Use React Query for client-side data fetching.
- Use Redux for client-side state management.

The client is organized into the following order:

src/

- src/api
  - /mutations
  - /queries
- src/components/
- src/features/
- src/hooks/
- src/lib/
  - /utils
- src/pages/
- src/styles/
  The express backend is organized into the following order:

src/

- src/controllers/
- src/database/
- src/middleware/
- src/routes/
- src/services/
- src/utils/
- src/app.ts

Follow React Query docs for Client-side Data Fetching.
Follow React Redux for client-side state management.
Follow Drizzle ORM docs for Database Operations.
Follow Shadcn UI docs for UI Components.
Follow Tailwind CSS docs for Styling.
